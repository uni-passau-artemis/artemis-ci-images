---
name: Build Image

on:
  workflow_call:
    inputs:
      subdir:
        required: true
        type: string
      build_args:
        required: true
        type: string
      image_name:
        required: true
        type: string
      base_image:
        required: false
        default: "base"
        type: string

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: artemis-${{ inputs.image_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        pipeline_helper: ["v2.1.0"]
        java_major_version: [17, 21, 22]
        include:
          - java_major_version: 17
            java_version: 17.0.10
            java_url: "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.10%2B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.10_7.tar.gz"
          - java_major_version: 21
            java_version: 21.0.2
            java_url: "https://download.java.net/java/GA/jdk21.0.2/f2283984656d49d69e91c558476027ac/13/GPL/openjdk-21.0.2_linux-x64_bin.tar.gz"
          - java_major_version: 22
            java_version: 22.0.1
            java_url: "https://download.java.net/java/GA/jdk22.0.1/c7ec1332f7bb44aeba2eb341ae18aca4/8/GPL/openjdk-22.0.1_linux-x64_bin.tar.gz"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch pipeline-helper
        run: |
          wget -q -O ${{ inputs.subdir }}/pipeline-helper.jar https://github.com/uni-passau-artemis/pipeline-helper/releases/download/${{ matrix.pipeline_helper }}/pipeline-helper.jar

      - name: Registry login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        uses: redhat-actions/buildah-build@v2
        id: build_image
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: |-
            ${{ matrix.java_major_version }}
            ${{ matrix.java_version }}
          build-args: |-
            JAVA_VERSION=${{ matrix.java_version }}
            JDK_DOWNLOAD_URL=${{ matrix.java_url }}
            BASE_IMAGE=${{ env.REGISTRY }}/artemis-${{ inputs.base_image }}:${{ matrix.java_version }}
            ${{ inputs.build_args }}
          context: ${{ inputs.subdir }}
          containerfiles: ${{ inputs.subdir }}/Dockerfile

      - name: Push images
        if: github.event_name != 'pull_request'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
