---
name: Build Image

on:
  workflow_call:
    inputs:
      subdir:
        required: true
        type: string
      image_name:
        required: true
        type: string
      base_image:
        required: false
        default: "base"
        type: string

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: artemis-${{ inputs.image_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        pipeline_helper: ["v2.2.1"]
        java_major_version: [17, 21, 22, 23]
        include:
          - java_major_version: 17
            java_version: 17.0.13
            java_url: "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_x64_linux_hotspot_17.0.13_11.tar.gz"
          - java_major_version: 21
            java_version: 21.0.5
            java_url: "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_x64_linux_hotspot_21.0.5_11.tar.gz"
          - java_major_version: 22
            java_version: 22.0.2
            java_url: "https://download.java.net/java/GA/jdk22.0.2/c9ecb94cd31b495da20a27d4581645e8/9/GPL/openjdk-22.0.2_linux-x64_bin.tar.gz"
          - java_major_version: 23
            java_version: 23.0.1
            java_url: "https://download.java.net/java/GA/jdk23.0.1/c28985cbf10d4e648e4004050f8781aa/11/GPL/openjdk-23.0.1_linux-x64_bin.tar.gz"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch pipeline-helper
        run: |
          wget -q -O ${{ inputs.subdir }}/pipeline-helper.jar https://github.com/uni-passau-artemis/pipeline-helper/releases/download/${{ matrix.pipeline_helper }}/pipeline-helper.jar

      # support multiple architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.8.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.10.0
        with:
          tags: |
            ghcr.io/uni-passau-artemis/${{ env.IMAGE_NAME }}:${{ matrix.java_major_version }}
            ghcr.io/uni-passau-artemis/${{ env.IMAGE_NAME }}:${{ matrix.java_version }}
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/artemis-${{ inputs.base_image }}:${{ matrix.java_version }}
            JAVA_VERSION=${{ matrix.java_version }}
            JDK_DOWNLOAD_URL=${{ matrix.java_url }}
            MAVEN_VERSION=3.9.9
          context: ${{ inputs.subdir }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
